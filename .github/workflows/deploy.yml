name: Deploy Landing

on:
  push:
    branches: [main]
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production  # –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Environment variables –∏–∑ Production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64  # –¢–æ–ª—å–∫–æ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ AMD64
          push: true
          build-args: |
            NEXT_PUBLIC_TELEGRAM_CHANNEL_ID=${{ vars.NEXT_PUBLIC_TELEGRAM_CHANNEL_ID }}
            NEXT_PUBLIC_TELEGRAM_BOT_TOKEN=${{ vars.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN }}
            NEXT_PUBLIC_AMPLITUDE_KEY=${{ vars.NEXT_PUBLIC_AMPLITUDE_KEY }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:latest
          cache-to: type=inline
      
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "üöÄ Starting landing deployment..."
            
            # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            echo "‚è∏Ô∏è  Stopping old container..."
            docker stop reflexity-landing 2>/dev/null || true
            docker rm reflexity-landing 2>/dev/null || true
            
            # –°–∫–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
            echo "üì• Pulling new image..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:latest
            
            # –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            echo "‚ñ∂Ô∏è  Starting new container..."
            docker run -d \
              --name reflexity-landing \
              --restart unless-stopped \
              -p 3000:3000 \
              ${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:latest
            
            # –ü–æ–¥–æ–∂–¥–∞—Ç—å –∑–∞–ø—É—Å–∫–∞
            echo "‚è≥ Waiting for container to start..."
            sleep 5
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            echo "‚úÖ Checking container status..."
            docker ps | grep reflexity-landing
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏
            echo "üìã Recent logs:"
            docker logs --tail=20 reflexity-landing
            
            # –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
            echo "üßπ Cleaning up old images..."
            docker image prune -f
            
            echo "‚ú® Landing deployment completed!"
      
      - name: Check deployment
        run: |
          echo "üéâ Landing deployed successfully!"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Image: ${{ secrets.DOCKERHUB_USERNAME }}/reflexity-landing:latest"

