import clsx from 'clsx'
import Footer from 'components/UI-kit/Footer/Footer'
import Header from 'components/UI-kit/Header/Header'
import useMediaQuery from 'hooks/useMediaQuery'
import Head from 'next/head'
import Link from 'next/link'
import React, { useEffect, useRef, useState } from 'react'
import styles from 'src/styles/policy.module.scss'

const navMenu = [
  {
    title: 'Введение',
    link: '#introduction',
    text: [
      '1. На данной странице размещены основные правила, соглашения, особенности (далее - Документ) работы с Reflexity.com (далее - Сервис).',
      '2. Документом утверждаются нижеизложенные взаимодействия Клиента и Сервиса. Сервис, в соответствии с Тарифами, отображаемыми внутри кабинета Клиента, получает комиссию за предоставленные услуги Клиенту, который изучил и согласился с данным Документом.',
      '3. Документ представляет собой оферту Сервиса с строго прописанными правилами, соглашениями и вступает в законную силу с момента регистрации Клиента на Сервисе Reflexity.com.',
      '4. Дополнительные услуги Сервиса, не прописанные в данном Документе, но вызванные запросом Клиента, при обращении к сервису, могут быть предоставлены Клиенту, если на то возникнут существенные основания, и только по его личному желанию, высказанному его личному менеджеру Сервиса Reflexity.',
    ],
  },
  {
    title: 'Список терминов',
    link: '#listOfTerms',
    text: [
      <>
        <span>Клиент</span> – лицо, имеющее данные авторизации на Сервис
        Reflexity.com, пользующееся услугами Сервиса.
      </>,
      <>
        <span>Плательщик</span> - Лицо, оплачивающее товар или услугу на сайте,
        приложении, кошельке или другом сервисе Клиента.
      </>,
      <>
        <span>Трейдер</span> - физическое лицо, покупающее и продающее
        криптовалюту по средствам p2p.
      </>,
      <>
        <span>Данные авторизации</span> – Токен и пароль, предоставляемый
        сервисом для входа в личный кабинет.
      </>,
      <>
        <span>Авторизация</span> – получение доступа в личный кабинет Клиента по
        Токену или обращение к API Сервиса с использованием API-токена.
      </>,
      <>
        <span>Неразрешенная деятельность</span> – деятельность направленная на
        обслуживание сервисов, предоставление услуг к ним, доступа или продажу
        товаров подпадающие под запрет действующего законодательства РФ, а также
        противоречащие любым этическим и моральным нормам.
      </>,
      <>
        <span>Идентификация</span> – предоставление Клиентом по запросу Сервиса
        необходимых личных данных, данных о своем Плательщике, определенных
        законом или настоящими Правилами.
      </>,
      <>
        <span>Клиентский счет</span> – Средства полученные Клиентом за платежи
        его Плательщика.
      </>,
      <>
        <span>Операция</span> – любые манипуляции со средствами на счету.
      </>,
      <>
        <span>Платеж</span> – это перевод средств третьей стороне с личного
        кошелька в Сервисе.
      </>,
      <>
        <span>Регистрация</span> – процесс заполнения специальной формы с целью
        идентификации бизнеса Клиента и самого Клиента для дальнейшего рабочего
        сотрудничества между Клиентом и Сервисом.
      </>,
      <>
        <span>Сервис</span> – комплекс алгоритмов и процессов, отображаемый в
        личном кабинете Reflexity.com, Гарант честных сделок между Трейдером и
        Клиентом. Предоставляет услуги по приему и выплате платежей для Конечных
        Клиентов.
      </>,
      <>
        <span>Баланс</span> – Криптовалюта, которая принадлежит владельцу Токена
        в Сервисе.
      </>,
      <>
        <span>Стороны</span> – Сервис и Клиент, где последний получает услуги от
        первого.
      </>,
      <>
        <span>Услуги</span> – Выступление посредником между Трейдером и
        Клиентом, гарантия честных и своевременных сделок между ними,
        предоставление комплекса автоматизации и подробной статистики.
      </>,
      <>
        <span>Заявка</span> - дистанционное распоряжение Клиента на прием
        средств Плательщика или выплату средств Получателю.
      </>,
      <>
        <span>Средства</span> - деньги на банковском счете, которые Клиент,
        Плательщик, Трейдер, Получатель используют в качестве оплаты за услуги
        или товар.
      </>,
    ],
  },
  {
    title: 'Общие положения',
    link: '#generalProvisions',
    text: [
      'Система Reflexity - это сервис-посредник между Трейдером и Клиентом (далее Сервис), предоставляющий автоматизацию сделок, взаиморасчетов между физическими лицами и/или юридическими лицами. Выступает гарантом честного выполнения своих финансовых и временных обязательств каждой из сторон.',
      'Оплата услуг, товаров или других продуктов Клиента производится безналичными средствами Плательщиком, получателем этих средств является Трейдер, Сервис производит взаиморасчеты между Клиентом и Трейдером согласно курсу, указанному в личном кабинете, начисляя средства Клиенту и списывая их у Трейдера. Сервис также предоставляет Услуги Клиенту по выплате безналичных средств путем перевода на банковскую карту на основании созданной заявки Клиентом в его личном кабинете, такие выплаты делает Трейдер, Сервис производит взаиморасчеты между ними согласно курсу указанному в личном кабинете клиента списывая средства с Клиента и начисляя их Трейдеру.',
      'Сервис имеет право в одностороннем порядке вносить изменения в настоящий Договор путем публикации изменений на сайте Reflexity.com. Изменения вступают в силу с момента опубликования, если иной срок вступления изменений в силу не определен дополнительно при их публикации.',
    ],
  },
  {
    title: 'Права сторон',
    link: '#rightsOfTheParties',
    text: [
      'В рамках своих внутренних правил и политики ведения бизнеса с целью минимизации возможных рисков и убытков Сервиса, Клиента или Трейдера в целях минимизации и защиты от мошеннической деятельности, несоблюдения требований законодательства, Сервис вправе в одностороннем порядке:',
      [
        'Устанавливать или изменять сумму максимальной или минимальной транзакции;',
        'Временно включать или выключать, добавлять или удалять возможные способы оплаты для Плательщика;',
        'Требовать от клиента информацию о Плательщике;',
        'Запрашивать документы или другую информацию для актуализации данных о его деятельности, бизнесе, товарах или услугах;',
        'Понижать или повышать курсы совершения сделок, уведомляя об этом клиентов изменяя актуальную ставку в личном кабинете и веб xml-файле, где прописаны актуальные курсы;',
        'Оповестить правоохранительные органы в случаях выявления противозаконной деятельности Клиента;',
        'Отказать в предоставлении Услуг Клиенту без объяснения причины;',
        'Возвратить платеж Плательщику, компенсируя за счет Клиента затраты Трейдера и Сервиса, если платеж не прошел проверку безопасности предусмотренную правилами Международных платежных систем и внутренними процедурами Сервиса описанные в этом документе.',
      ],
      'Со своей стороны Клиент имеет право:',
      [
        'Получить полную техническую - поддержку на этапе интеграции Сервиса Reflexity.com;',
        'Получать дополнительную информацию о процессах и алгоритмах работы Сервиса или другие инструкции по работе с Системой Bitconce.com;',
        'Пользоваться услугами приема и выплаты платежей Системы Bitconce.com;',
        'Ознакамливаться и выгружать подробную статистику сделок Клиента в удобном для него виде;',
        'Требовать от Сервиса официальное, документальное подтверждение из банка, в случае спорного момента Клиента и Плательщика или Получателя;',
        'Распоряжаться полученными средствами из личного кабинета в своих целях в любое, удобное для Клиента время;',
        'Получать содействие от Сервиса в решении вопросов или ситуациях возникших во время работы с Сервисом.',
      ],
    ],
  },
  {
    title: 'Обязанности сторон',
    link: '#dutiesOfTheParties',
    text: [
      'Сервис обязан:',
      [
        'Своевременно рассчитывать и присваивать верный статус заявкам Клиента;',
        'Принимать и обрабатывать платежи Плательщиков по заявкам Клиента, используя не запрещенные законом методы приема и отправки платежей;',
        'Выплачивать платежи Получателям по заявкам Клиента, используя не запрещенные законом методы приема и отправки платежей;',
        'Рассчитывать Клиента по его запросу согласно балансу Клиента отображаемого в личном кабинете Клиента;',
        'Вести учет баланса Клиента, предоставляя всю подробную статистику сделок, списания и начисления баланса Клиента;',
      ],
      'Клиент обязан:',
      [
        'Соблюдать указанные сервисом минимальный и максимальный лимит одной платежной операции;',
        'Вести практиктику направленную на противодействие мошеннических действий и других противозаконных деяний Плательщика;',
        'Путем собственных наблюдений и наработок минимизировать противоправные или мошеннические действия Плательщика;',
        'Выполнять условия настоящего договора;',
        'Соблюдать требования законодательства РФ и другие моральные и этические нормы;',
        'В целях предотвращения легализации доходов, полученных преступным путем, по требованию Сервиса предоставлять необходимые документы, сведения или другие запрашиваемые данные для актуализации, идентификации самого Клиента или его Плательщика;',
        'Не разглашать личные данные представленные Сервисом Клиенту третьим лицам;',
        'Не использовать услуги системы Bitconce.com с целью реализации товаров или услуг запрещенных в РФ, а также противоречащих моральным или этическим нормам;',
        'Предотвратить случаи, где Плательщик использует оплату услуг или товаров Клиента с целью реализации “Финансового Треугольника”;',
        'Уведомлять Сервис о изменениях в каталоге услуг или товаров Клиента, связанных с исполнением данного договора, за день до внесения этих изменений Клиентом;',
        'Вносить корректные данные при совершении транзакций, создании заявок внутри Сервиса Reflexity;',
        'Уведомить Сервис незамедлительно, но не позднее одного календарного дня, о выявленных фактах компрометации;',
        'Незамедлительно принимать меры по предотвращению компрометации и устранению слабых мест в безопасности защиты информации;',
        'Раскрывать информацию судебным и правоохранительным органам, о компрометационных событиях, в порядке установленном действующим законодательством Российской Федерации;',
        'При возникновении обстоятельств, препятствующих выполнению условий настоящего Договора, незамедлительно уведомить Сервис.',
      ],
    ],
  },
  {
    title: 'Мониторинг операций',
    link: '#operationMonitoring',
    text: [
      'С целью выявления операций, вызывающих подозрение относительно их правомерности и принятие мер по предотвращению мошеннических операций с Картами или другими платежными системами, Сервис имеет право осуществлять мониторинг сайтов или других интернет-продуктов Клиента, а также (анализ) Транзакций и/или информации, содержащейся в Дистанционных распоряжениях Клиента на предмет соответствия требованиям настоящего Договора, положениям законодательства Российской Федерации.',
    ],
  },
  {
    title: 'Методы оплаты',
    link: '#paymentMethods',
    text: [
      'Методы оплаты, доступны в системе Reflexity указаны в личном кабинете Клиента. Сервис имеет право в одностороннем порядке вносить изменения в перечень Методов оплаты без обязательного предварительного уведомления Клиента.',
      'Сервис имеет право в одностороннем порядке устанавливать ограничения и лимиты предоставления Услуги по каждому Методу оплаты (например, Максимальную и Минимальную сумму Транзакции по каждому Методу оплаты) без обязательного предварительного уведомления Клиента.',
    ],
  },
  {
    title: 'Финансовые условия',
    link: '#financialConditions',
    text: [
      'Стоимость финансовых услуг по приему платежей при помощи системы Reflexity и лимиты по каждому Методу оплаты указаны в соответствующем разделе личного кабинета Клиента. Сервис оставляет за собой право менять тарифы и/или лимиты в одностороннем порядке.',
    ],
  },
  {
    title: 'Ответственность сторон',
    link: '#responsibilityOfTheParties',
    text: [
      <>
        <span>Клиент</span> несет ответственность за сохранение данных выданных
        Сервисом для авторизации в личный кабинет Сервиса. Клиент несет
        ответственность за все действия лиц, которым он передает личные данные.
      </>,
      <>
        <span>Клиент</span> несет полную ответственность за действия своих
        Плательщиков, в том числе за финансовый смысл их транзакций. Сервис
        имеет право на возмещение убытков вызванных неправомерными действиями
        Клиента или его Плательщиков в полном размере этих убытков.
      </>,
      <>
        <span>Клиент</span> несет ответственность за своевременное выполнение
        его обязанностей перед Плательщиком, согласно прописанным правилам или
        условиям на сайте Клиента.
      </>,
      <>
        <span>Клиент</span> несет ответственность за товары или услуги
        размещенные на ресурсе Клиента.
      </>,
      <>
        <span>Клиент</span> несет полную ответственность за товары, услуги и
        информацию размещенную на его интернет-ресурсе.
      </>,
      <>
        <span>Сервис</span> проводит анализ интернет-ресурсов Клиента, с целью
        контроля качества и законности товаров или услуг, но не несет
        ответственность за них.
      </>,
      <>
        <span>Сервис</span> несет ответственность за честные сделки между
        Трейдером и Клиентом, своевременное выполнение обязательств Трейдера.
      </>,
      <>
        <span>Сервис</span> несет ответственность за выполнение своих
        обязательств прописанных в настоящем соглашении.
      </>,
      <>
        <span>Сервис</span> несет ответственность за корректное ведение всей
        статистики, отчетности по всем финансовым движениям Клиента при работе с
        Сервисом Reflexity.com
      </>,
      <>
        <span>Сервис</span> несет ответственность за своевременное и корректное
        исполнение приема плажей, выплате платежей, выводу средств по поручению
        Клиента.
      </>,
      <>
        <span>Сервис</span> не несет ответственность за комиссии и сроки,
        зачисления денежных средств установленные банками, электронными
        платежными системами, за сроки и комиссии сети Blockchain.
      </>,
      'При невыполнении или ненадлежащем выполнении своих обязательств одной из Сторон, другая Сторона имеет право потребовать от виновной Стороны исполнения принятых на себя обязательств, а также возмещения причиненных ей убытков.',
    ],
  },
  {
    title: 'Урегулирование разногласий и рассмотрение споров',
    link: '#settlementOfDisagreements',
    text: [
      'Все споры и разногласия, возникающие во время взаимной работы Сервиса и Клиента, не прописанные в данном соглашение подлежат урегулированию путем переговоров.',
      'Если Стороны не придут к соглашению, споры и разногласия подлежат разрешению в установленном действующим законодательством порядке.',
    ],
  },
  {
    title: 'Срок действия договора. Прекращение договора',
    link: '#contractTime',
    text: [
      'Настоящий Договор вступает в силу с момента регистрации Клиентом в Сервисе и действует до момента его прекращения одной из Сторон. Любая Сторона может прекратить настоящий Договор путем отправки уведомления о прекращении другой Стороне за сутки до прекращения.',
      'Сервис может прекратить предоставление Услуг по настоящему Договору и/или расторгнуть Договор в одностороннем порядке путем направления Клиенту уведомления не позднее дня прекращения предоставления Услуг и/или расторжения Договора без объяснение причины Клиенту.',
    ],
  },
  {
    title: 'Форс мажор',
    link: '#forceMajeure',
    text: [
      'Стороны освобождаются от ответственности за полное или частичное невыполнение обязательств по настоящему Договору, если это неисполнение явилось следствием запретительных мер государства, местных органов власти или обстоятельств непреодолимой силы, к которым относятся события, на которые Стороны не могут оказать влияние и не несут ответственности за их возникновение, например: пожар, наводнение, землетрясение, война, забастовка и т. п.',
    ],
  },
  {
    title: 'Другие условия',
    link: '#otherConditions',
    text: [
      <>
        Настоящий Договор публично доносится неограниченному кругу лиц на
        веб-сайте <a href='https://reflexity.com'>https://reflexity.com.</a>
      </>,
      'Клиент подтверждает, что все условия настоящего Договора ему понятны, и он принимает их безусловно и в полном объеме.',
    ],
  },
]

function Terms() {
  const isMobile = useMediaQuery('(max-width: 768px)')
  const html = typeof window !== 'undefined' && document.querySelector('html')
  const [activeItenIndex, setActiveItenIndex] = useState(0)
  const stickyBox = useRef<HTMLDivElement>(null)
  const [isStickedMenu, setIsStickedMenu] = useState(false)

  useEffect(() => {
    window.addEventListener('scroll', handleScroll)
    document.body.classList.add('canScroll')
    if (html) html.classList.add('canScroll')

    return () => {
      window.removeEventListener('scroll', handleScroll)
      document.body.classList.remove('canScroll')
      if (html) html.classList.remove('canScroll')
    }
  }, [])

  const onClickHandler = (anchor: string) => {
    const anchorElement = document.getElementById(anchor)
    scrollTo({
      top: (anchorElement?.offsetTop ?? 0) + (isMobile ? 30 : 80),
      behavior: 'smooth',
    })
  }

  const handleScroll = () => {
    const scrollPosition = window.scrollY
    let activeBlockIndex = 0

    if (isMobile && stickyBox.current) {
      if (scrollPosition >= stickyBox.current?.offsetTop + 30) {
        setIsStickedMenu(true)
      } else {
        setIsStickedMenu(false)
      }
    }

    for (let i = navMenu.length - 1; i >= 0; i--) {
      const blockElement = document.getElementById(navMenu[i].link)
      if (blockElement && scrollPosition >= blockElement.offsetTop) {
        activeBlockIndex = i
        break
      }
    }

    setActiveItenIndex(activeBlockIndex)
  }

  return (
    <main className={clsx(styles.pageBox)}>
      <Head>
        <title>Пользовательское соглашение</title>
      </Head>
      <Header
        screenNumber={'0'}
        isMobile={isMobile}
        onScrollToScreenCallback={() => console.log('')}
        isSidePage
      />
      <div className={clsx('wrapper', styles.wrapper)}>
        <h1>Пользовательское соглашение</h1>

        <div className={styles.textsBox}>
          <div className={styles.articlesBox}>
            {navMenu.map((item, index) => (
              <div
                key={index}
                id={item.link}
                className={clsx(styles.articleBox)}
              >
                <h2>{item.title}</h2>
                {item.text.map((text, index) =>
                  Array.isArray(text) ? (
                    <ul key={index}>
                      {text.map((li, key) => (
                        <li key={key}>{li}</li>
                      ))}
                    </ul>
                  ) : (
                    <p key={index}>{text}</p>
                  )
                )}
              </div>
            ))}
          </div>
          <div className={styles.stickyWrapper} ref={stickyBox}>
            <div
              className={clsx(
                styles.stickyBox,
                isStickedMenu && styles.stickedMenu
              )}
            >
              {navMenu.map((item, index) => (
                <Link
                  key={index}
                  href={item.link}
                  onClick={() => onClickHandler(item.link)}
                  className={clsx(activeItenIndex === index && styles.active)}
                >
                  {item.title}
                </Link>
              ))}
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </main>
  )
}

export default Terms
