# Пример конфигурации Nginx для роутинга между лендингом и бекендом
# Установка: sudo cp nginx.conf.example /etc/nginx/sites-available/reflexity

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;

    # Логи
    access_log /var/log/nginx/reflexivity_access.log;
    error_log /var/log/nginx/reflexivity_error.log;

    # ====================================
    # API бекенда - все запросы на /api/*
    # ====================================
    location /api/ {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        
        # Заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support (если нужно)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ====================================
    # Документация API - /docs и /redoc
    # ====================================
    location ~ ^/(docs|redoc|openapi.json) {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ====================================
    # Health check бекенда
    # ====================================
    location /health {
        proxy_pass http://localhost:8000;
        access_log off;
    }

    # ====================================
    # Лендинг - все остальные запросы
    # ====================================
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        
        # Заголовки
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Next.js hot reload (только для dev)
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        
        # Кеширование статики
        proxy_cache_bypass $http_upgrade;
    }

    # ====================================
    # Статические файлы Next.js (опционально)
    # ====================================
    location /_next/static/ {
        proxy_pass http://localhost:3000;
        proxy_cache_valid 200 365d;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        add_header Cache-Control "public, immutable";
    }

    # ====================================
    # Favicon и robots.txt
    # ====================================
    location = /favicon.ico {
        proxy_pass http://localhost:3000;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        proxy_pass http://localhost:3000;
        access_log off;
    }
}

# ====================================
# SSL версия (после получения сертификата)
# ====================================
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com;
#
#     # SSL сертификаты (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
#     
#     # SSL настройки
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # ... остальная конфигурация из HTTP блока ...
# }
#
# # Редирект HTTP → HTTPS
# server {
#     listen 80;
#     server_name yourdomain.com www.yourdomain.com;
#     return 301 https://$server_name$request_uri;
# }

